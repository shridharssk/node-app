name: Build and deploy Node.js app to Azure Web App - test-web-node



on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Node.js version
        uses: actions/setup-node@v1
        with:
          node-version: '16.x'

      - name: npm install, build, and test
        run: |
          npm install
          npm run build --if-present
          npm run test --if-present
          
      - name: Zip artifact for deployment
        run: zip node-app.zip ./* -r
    
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: node-app
          path: node-app.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    env:
      ResourceGroupLocation: "eastus"
      WEBAPP: mongo-priv
      GROUP: priv
      ACCOUNT: shridhartempstore  # Does not have to exist, this will be created for you
      CONTAINER: dev-strogae-container
      EXPIRY_TIME: 10 minutes
      
      
    steps:
    
      - name: OIDC Login to Azure Public Cloud with AzPowershell (enableAzPSSession true)
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true
          
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: node-app
          
      - name: Set SAS token expiration
        run: echo "expiry=`date -u -d "$EXPIRY_TIME" '+%Y-%m-%dT%H:%MZ'`" >> $GITHUB_ENV
        
      - name: Azure CLI script
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az extension add --name webapp
            az storage account create   -n $ACCOUNT   -g $GROUP -l $ResourceGroupLocation
            az storage container create -n $CONTAINER --account-name $ACCOUNT
            az storage blob upload -f  node-app.zip    --account-name $ACCOUNT -c $CONTAINER -n $ACCOUNT
            ZIP_URL=$(az storage blob generate-sas --full-uri --permissions r --expiry ${{ env.expiry }} --account-name $ACCOUNT -c $CONTAINER -n $ACCOUNT | xargs)
            az webapp deploy --name $WEBAPP --resource-group $GROUP --type zip --src-url  $ZIP_URL --async false
            az storage container delete -n $CONTAINER --account-name $ACCOUNT
